/*
 * Copyright (C) 2008 feilong
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.feilong.security.oneway.sha1;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

import com.feilong.lib.codec.digest.DigestUtils;
import com.feilong.security.AbstractSecurityTest;
import com.feilong.security.oneway.SHA1Util;

@lombok.extern.slf4j.Slf4j
public class SHA1UtilTest extends AbstractSecurityTest{

    @Test
    public void encode121(){
        assertEquals(DigestUtils.sha1Hex("2284208963"), SHA1Util.encode("2284208963"));
    }

    @Test
    public void encode(){
        assertEquals("da39a3ee5e6b4b0d3255bfef95601890afd80709", SHA1Util.encode(""));
        assertEquals("7c4a8d09ca3762af61e59520943dc26494f8941b", SHA1Util.encode("123456"));
    }

    @Test
    public void encodeUpperCase(){
        assertEquals("DA39A3EE5E6B4B0D3255BFEF95601890AFD80709", SHA1Util.encodeUpperCase(""));
        assertEquals("7C4A8D09CA3762AF61E59520943DC26494F8941B", SHA1Util.encodeUpperCase("123456"));
    }

    @Test
    public void encode12(){
        log.debug(debugSecurityValue(SHA1Util.encode("2284208963")));
    }

    @Test
    public void encode1(){
        log.debug(debugSecurityValue(SHA1Util.encode("521000")));
        String origin = "sdadadadadaadasasdasdadas" + "dasdadasdadadasdasdasdadasdasdadadadadasdadadadad"
                        + "aaadasdasdasdasdadadadadaadasasdasdadasdasda" + "dasdadadasdasdasdadas"
                        + "dasdadadadadasdadadadadaaadasdasdasdasasda" + "sdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaa"
                        + "dasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdada"
                        + "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
                        + "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
                        + "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
                        + "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
                        + "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
                        + "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
                        + "asasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasa"
                        + "sdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadas"
                        + "addssadsaadasdasdasdasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdadasdasdasdadasaddssadsaadasdasdasda"
                        + "sdasdasdadasaddssadsaad";
        log.debug(debugSecurityValue(SHA1Util.encode(origin)));
    }

}
