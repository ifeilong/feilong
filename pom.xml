<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.ifeilong</groupId>
	<artifactId>feilong-parent</artifactId>
	<version>3.5.0</version>

	<packaging>pom</packaging>

	<!-- 成立年份 -->
	<inceptionYear>2008</inceptionYear>

	<!-- 发布到中央仓库必须要name -->
	<name>feilong-parent</name>
	<description>Reduce development, Release ideas,all feilong parent pom</description>

	<url>https://github.com/ifeilong/feilong</url>

	<modules>
		<module>feilong-lib</module>
		<module>feilong-core</module>
		<module>feilong-validator</module>
		<module>feilong-json</module>
		<module>feilong-io</module>

		<module>feilong-servlet</module>
		<module>feilong-accessor</module>

		<module>feilong-net</module>

		<module>feilong-template</module>
		<module>feilong-xml</module>

		<module>feilong-context</module>
		<module>feilong-core-extension</module>
		<module>feilong-formatter</module>
		<module>feilong-namespace</module>
		<module>feilong-security</module>
		<module>feilong-taglib</module>
		<module>feilong-tools</module>

		<module>feilong-office</module>
		<module>feilong-component</module>

		<module>feilong</module>
		<module>feilong-with-optional</module>
	</modules>

	<!--****************************定义属性 properties************************************* -->
	<properties>
		<!-- 不要使用${project.version}, 因为如果真实项目生成的版本不是1.7.0的时候,比如是 0.0.1版本,那么就引用不到feilong包 -->
		<version.feilong-platform>3.5.0</version.feilong-platform>
		<version.feilong-common-test>4.1.1</version.feilong-common-test>

		<!-- 让整个项目统一字符集编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- https://docs.sonarqube.org/latest/analysis/analysis-parameters/ -->
		<v.sonar-maven-plugin>3.7.0.1746</v.sonar-maven-plugin>

		<!-- https://github.com/spring-projects/spring-framework/releases -->
		<!-- https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Versions -->
		<!-- 
		Spring Framework版本	JDK版本  Spring Framework各版本的生命周期如下：
		
			6.0.x	JDK 17-21
			
			5.3.x	JDK 8-19   第 5 代的最后一个特性分支，在 JDK 8、JDK 11、JDK 17 上提供长期支持
			5.2.x	JDK 8-15  将积极支持到 2021 年底
			
			5.1.x	JDK 8-12 不再受到积极支持，自 2020 年 12 月起被 5.2.x 和 5.3.x 取代
			5.0.x	JDK 8-10 不再受到积极支持，自 2020 年 12 月起被 5.2.x 和 5.3.x 取代
			4.3.x	JDK 6-8 于2020 年 12 月 31 日停止维护
			
			3.2.x	于 2016 年 12 月 31 日停止维护
 		-->
		<version.spring>5.3.27</version.spring>

		<!-- **********************begin maven-compiler-plugin config******************************************* -->
		<maven-compiler-plugin.source>1.8</maven-compiler-plugin.source>
		<maven-compiler-plugin.target>1.8</maven-compiler-plugin.target>
		<maven-compiler-plugin.encoding>${project.build.sourceEncoding}</maven-compiler-plugin.encoding>
		<!-- **********************end maven-compiler-plugin config******************************************* -->

		<!--****************************第三方************************************ -->

		<!--*********************begin dependency plugins version************************************ -->

		<!-- http://www.bouncycastle.org/java.html -->
		<version.bcprov-jdk15on>1.70</version.bcprov-jdk15on>

		<!--http://commons.apache.org/proper/commons-fileupload/changes-report.html#a1.4 -->
		<version.commons-fileupload>1.5</version.commons-fileupload>
		<version.commons-lang3>3.12.0</version.commons-lang3>

		<!-- http://hc.apache.org/downloads.cgi -->
		<!-- https://downloads.apache.org/httpcomponents/httpclient/RELEASE_NOTES-4.5.x.txt -->
		<version.httpcomponents>4.5.13</version.httpcomponents>

		<version.cxf>3.1.11</version.cxf>

		<!-- http://www.jcraft.com/jsch/ChangeLog -->
		<version.jsch>0.1.55</version.jsch>

		<!-- https://jsoup.org/news/ -->
		<version.jsoup>1.15.4</version.jsoup>

		<version.javamail>1.4.7</version.javamail>
		<version.javax.mail>1.6.2</version.javax.mail>

		<version.servlet-api>3.1.0</version.servlet-api>
		<version.jsp-api>2.3.3</version.jsp-api>
		<version.el-api>3.0.0</version.el-api>
		<version.jstl>1.2</version.jstl>

		<!-- https://junit.org/junit4/ -->
		<version.junit>4.13.2</version.junit>
		<version.hamcrest-library>1.3</version.hamcrest-library>


		<!-- log -->
		<!-- http://www.slf4j.org/news.html -->
		<version.slf4j>1.7.36</version.slf4j>

		<!-- https://logging.apache.org/log4j/2.x/release-notes/index.html -->
		<version.log4j2>2.20.0</version.log4j2>

		<!-- https://logback.qos.ch/news.html 统一版本 -->
		<!-- 1.3 对应jdk 8    1.4 对应jdk11 -->
		<version.logback>1.3.6</version.logback>


		<version.aspectjweaver>1.6.8</version.aspectjweaver>

		<!-- http://poi.apache.org/ -->
		<!-- http://poi.apache.org/devel/history/changes-3x.html -->
		<!-- 4.0.1 之后需要 jdk8 -->
		<version.poi>4.1.2</version.poi>
		<!-- 新版poi需要这个jar -->
		<version.ooxml-schemas>1.4</version.ooxml-schemas>

		<!-- http://velocity.apache.org/news.html -->
		<!-- Velocity Engine 2.1 now requires Java 1.8+. -->
		<version.velocity-engine>2.2</version.velocity-engine>

		<!-- http://x-stream.github.io/ -->
		<!-- This maintenance release addresses the security vulnerabilities CVE-2022-40151 and CVE-2022-41966, causing a Denial of Service by raising a stack overflow. It also provides new converters for Optional and Atomic types. -->
		<version.xstream>1.4.20</version.xstream>

		<!--*********************end dependency plugins version************************************ -->

		<!--*********************begin plugins version************************************ -->

		<!-- http://maven.apache.org/components/plugins/maven-assembly-plugin/ -->
		<!-- https://issues.apache.org/jira/projects/MASSEMBLY?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-assembly-plugin>3.5.0</v.maven-assembly-plugin>

		<v.maven-clean-plugin>3.2.0</v.maven-clean-plugin>

		<!-- http://maven.apache.org/plugins/maven-compiler-plugin/download.cgi -->
		<!-- https://issues.apache.org/jira/projects/MCOMPILER?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-compiler-plugin>3.11.0</v.maven-compiler-plugin>

		<v.maven-changes-plugin>2.12.1</v.maven-changes-plugin>

		<!-- http://maven.apache.org/plugins/maven-changelog-plugin/changelog-mojo.html -->
		<v.maven-changelog-plugin>2.3</v.maven-changelog-plugin>

		<!-- CheckStyle能够帮助Java开发人员准守某些编码规范的工具。它能够自动检查代码。 -->
		<!-- <v.maven-checkstyle-plugin>2.17</v.maven-checkstyle-plugin> -->

		<!-- https://issues.apache.org/jira/projects/MDEP?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released -->
		<!-- http://maven.apache.org/plugins/maven-dependency-plugin/index.html -->
		<v.maven-dependency-plugin>3.5.0</v.maven-dependency-plugin>

		<!-- https://maven.apache.org/plugins/maven-deploy-plugin/index.html -->
		<!-- https://issues.apache.org/jira/projects/MDEPLOY?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-deploy-plugin>3.1.0</v.maven-deploy-plugin>

		<!-- https://maven.apache.org/plugins/maven-install-plugin/index.html -->
		<!-- https://issues.apache.org/jira/projects/MINSTALL?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-install-plugin>3.1.0</v.maven-install-plugin>

		<!-- https://issues.apache.org/jira/projects/MJAVADOC?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<!-- https://maven.apache.org/plugins/maven-javadoc-plugin/index.html -->
		<v.maven-javadoc-plugin>3.5.0</v.maven-javadoc-plugin>

		<!-- https://issues.apache.org/jira/projects/MJAR?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-jar-plugin>3.3.0</v.maven-jar-plugin>

		<v.maven-jxr-plugin>2.5</v.maven-jxr-plugin>
		<!-- http://maven.apache.org/plugins/maven-pmd-plugin/check-mojo.html -->
		<v.maven-pmd-plugin>3.13.0</v.maven-pmd-plugin>

		<!-- 用来做maven 插件的 -->
		<!-- http://maven.apache.org/plugin-tools/maven-plugin-plugin/project-info.html -->
		<!-- https://issues.apache.org/jira/projects/MPLUGIN?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-plugin-plugin>3.8.1</v.maven-plugin-plugin>

		<!-- 目前主要用于 scm-checkin-all.sh 一键push脚本 -->
		<!-- SCM Software Configuration Management 软件配置管理 where each SCM command is implemented as a plugin goal -->
		<!-- https://maven.apache.org/scm/ -->
		<!-- https://issues.apache.org/jira/projects/SCM?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-scm-plugin>2.0.0</v.maven-scm-plugin>

		<!-- http://maven.apache.org/plugins/maven-site-plugin/ -->
		<!-- https://issues.apache.org/jira/projects/MSITE?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-site-plugin>3.12.1</v.maven-site-plugin>

		<!-- http://maven.apache.org/plugins/maven-source-plugin/download.cgi -->
		<!-- https://issues.apache.org/jira/projects/MSOURCES?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-source-plugin>3.2.1</v.maven-source-plugin>

		<!-- 跑单元测试的 -->
		<!-- http://maven.apache.org/surefire/maven-surefire-plugin/ -->
		<!-- https://issues.apache.org/jira/projects/SUREFIRE?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-surefire-plugin>3.0.0</v.maven-surefire-plugin>
		
		
		<!-- https://maven.apache.org/maven-release/maven-release-plugin/plugin-info.html -->
		<!-- https://issues.apache.org/jira/projects/MRELEASE?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-release-plugin>3.0.0</v.maven-release-plugin>

		<!-- https://issues.apache.org/jira/browse/MRESOURCES/?selectedTab=com.atlassian.jira.jira-projects-plugin:changelog-panel -->
		<v.maven-resources-plugin>3.3.0</v.maven-resources-plugin>
		<v.maven-gpg-plugin>1.6</v.maven-gpg-plugin>

		<!-- http://maven.apache.org/plugins/maven-war-plugin/index.html -->
		<!-- https://issues.apache.org/jira/projects/MWAR?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-war-plugin>3.3.2</v.maven-war-plugin>

		<v.maven-shade-plugin>3.2.0</v.maven-shade-plugin>

		<!-- https://github.com/mojohaus/native2ascii-maven-plugin/wiki -->
		<v.native2ascii-maven-plugin>2.0.1</v.native2ascii-maven-plugin>

		<v.site-maven-plugin>0.12</v.site-maven-plugin>
		<v.nexus-staging-maven-plugin>1.6.8</v.nexus-staging-maven-plugin>

		<!-- taglist 检查报告 -->
		<v.taglist-maven-plugin>2.4</v.taglist-maven-plugin>

		<v.license-maven-plugin>3.0</v.license-maven-plugin>

		<!-- 优雅地管理项目版本号 -->
		<!-- http://www.mojohaus.org/versions-maven-plugin/ -->
		<!-- https://github.com/mojohaus/versions-maven-plugin/releases -->
		<v.versions-maven-plugin>2.15.0</v.versions-maven-plugin>

		<!-- http://maven.apache.org/plugins/maven-project-info-reports-plugin/ -->
		<v.maven-project-info-reports-plugin>3.4.2</v.maven-project-info-reports-plugin>

		<!-- https://github.com/jacoco/jacoco/releases -->
		<v.jacoco-maven-plugin>0.8.8</v.jacoco-maven-plugin>

		<!-- **********************end plugins version******************************************* -->

		<!-- **********************begin native2ascii config******************************************* -->
		<native2ascii-maven-plugin.pattern>**/*.properties</native2ascii-maven-plugin.pattern>
		<native2ascii-maven-plugin.encoding>${project.build.sourceEncoding}</native2ascii-maven-plugin.encoding>
		<!-- **********************end native2ascii config******************************************* -->

		<!-- **********************begin maven-surefire-plugin config******************************************* -->
		<maven-surefire-plugin.skip>false</maven-surefire-plugin.skip>
		<maven-surefire-plugin.include>**/SuiteTests</maven-surefire-plugin.include>
		<!-- **********************end maven-surefire-plugin config******************************************* -->

		<!-- **********************begin maven-javadoc-plugin config******************************************* -->
		<!-- 用来编译生成文档 -->
		<maven-javadoc-plugin.encoding>${project.build.sourceEncoding}</maven-javadoc-plugin.encoding>
		<maven-javadoc-plugin.docencoding>${project.build.sourceEncoding}</maven-javadoc-plugin.docencoding>
		<!-- 用来显示页面 META 部分 content="text/html; charset=GBK" -->
		<maven-javadoc-plugin.charset>${project.build.sourceEncoding}</maven-javadoc-plugin.charset>
		<!-- 用于读取javadoc 内部使用的 配置文件, 比如 描述文字为 描述,英文环境为description -->
		<maven-javadoc-plugin.locale>en_US</maven-javadoc-plugin.locale>

		<maven-javadoc-plugin.outputDirectory>/Users/feilong/workspace/feilong/else/javadoc/${project.artifactId}
		</maven-javadoc-plugin.outputDirectory>
		<maven-javadoc-plugin.reportOutputDirectory>
			/Users/feilong/workspace/feilong/else/javadoc/${project.artifactId}
		</maven-javadoc-plugin.reportOutputDirectory>
		<maven-javadoc-plugin.destDir>${project.artifactId}</maven-javadoc-plugin.destDir>
		<maven-javadoc-plugin.javadocVersion>1.8.0</maven-javadoc-plugin.javadocVersion>
		<maven-javadoc-plugin.javadocDirectory>/Users/feilong/Development/DataCommon/Files/Java/Apache
			Maven/javadoc/springframework
		</maven-javadoc-plugin.javadocDirectory>

		<maven-javadoc-plugin.stylesheetfile>${maven-javadoc-plugin.javadocDirectory}/stylesheet.css
		</maven-javadoc-plugin.stylesheetfile>

		<!-- If no custom stylesheet is specified in the <stylesheetfile/> parameter,
			the <stylesheet/> parameter will indicate which stylesheet will be used

			the stylesheet included in the maven javadoc plugin or the default stylesheet used by the javadoc tool.
			maven value indicates the maven javadoc plugin stylesheet,
			while java value indicates the default javadoc tool stylesheet.

			The default is java value if not specified.
		-->
		<maven-javadoc-plugin.stylesheet>java</maven-javadoc-plugin.stylesheet>

		<maven-site-plugin.outputDirectory>/Users/feilong/workspace/feilong/else/site/${project.artifactId}
		</maven-site-plugin.outputDirectory>

		<!-- **********************end maven-javadoc-plugin config******************************************* -->
		<developer.feilong.name>feilong</developer.feilong.name>
	</properties>


	<dependencies>

		<!--******** slf4j******** -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${version.slf4j}</version>
		</dependency>

		<!--******************** test************************* -->

		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- hamcrest-library -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- feilong-common-test -->
		<dependency>
			<groupId>com.github.ifeilong</groupId>
			<artifactId>feilong-common-test</artifactId>
			<version>${version.feilong-common-test}</version>
			<scope>test</scope>
		</dependency>


		<!--  log  -->

		<!--log4j2核心包-->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${version.log4j2}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${version.log4j2}</version>
			<scope>test</scope>
		</dependency>

		<!-- 
		log4j-slf4j-impl用于SLF4J 1.7.x 或更早版本，
		log4j-slf4j18-impl用于SLF4J 1.8.x或更新版本。 
		-->
		<!--用于与slf4j保持桥接-->
		<!--<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j18-impl</artifactId>
			<version>${version.log4j2}</version>
			<scope>test</scope>
		</dependency>
		-->

		<!-- log4j2和slf4j桥接依赖-->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${version.log4j2}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<!--*********************dependencyManagement****************************** -->
	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${version.commons-lang3}</version>
			</dependency>

			<!-- *******************spring********************************* -->

			<!-- spring-test -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${version.spring}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${version.spring}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${version.spring}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${version.spring}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${version.spring}</version>
			</dependency>

			<!-- **************************************************** -->

			<!-- -->
			<dependency>
				<groupId>com.sun.mail</groupId>
				<artifactId>javax.mail</artifactId>
				<version>${version.javax.mail}</version>
			</dependency>

			<!-- *********************apache******************************* -->

			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${version.bcprov-jdk15on}</version>
			</dependency>

			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${version.xstream}</version>
			</dependency>

			<!-- jsch 用于sftp 传输 -->
			<dependency>
				<groupId>com.jcraft</groupId>
				<artifactId>jsch</artifactId>
				<version>${version.jsch}</version>
			</dependency>

			<!-- jsoup -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${version.jsoup}</version>
			</dependency>

			<!--
				HttpCore is a set of low level HTTP transport components that can be used to build custom client and server side HTTP services with a minimal footprint.

				HttpCore supports two I/O models: blocking I/O model based on the classic Java I/O and non-blocking, event driven I/O model based on Java NIO.
				The blocking I/O model may be more appropriate for data intensive, low latency scenarios, whereas the non-blocking model may be more appropriate for high latency
				scenarios where raw data throughput is less important than the ability to handle thousands of simultaneous HTTP connections in a resource efficient manner.
			-->
			<!-- 4.5.3 没有 httpcore -->
			<!-- httpcore
				<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${version.httpcore}</version>
				</dependency> -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${version.httpcomponents}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.httpcomponents</groupId>
						<artifactId>httpclient</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- HttpClient is a HTTP/1.1 compliant HTTP agent implementation based on HttpCore.
				It also provides reusable components for client-side authentication,
				HTTP state management, and HTTP connection management.

				HttpComponents Client is a successor of and replacement for Commons HttpClient 3.x.

				Users of Commons HttpClient are strongly encouraged to upgrade. -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${version.httpcomponents}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity-engine-core</artifactId>
				<version>${version.velocity-engine}</version>
			</dependency>

			<!-- commons-fileupload -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${version.commons-fileupload}</version>
			</dependency>

			<!-- ***************************** poi ***************************** -->
			<!-- poi HSSF is our port of the Microsoft Excel 97(-2007) file format (BIFF8) to pure Java. -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${version.poi}</version>
			</dependency>

			<!-- poi-ooxml XSSF is our port of the Microsoft Excel XML (2007+) file format (OOXML) to pure Java -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${version.poi}</version>
				<exclusions>
					<exclusion>
						<groupId>com.github.virtuald</groupId>
						<artifactId>curvesapi</artifactId>
					</exclusion>
					<!-- 不能少 Caused by: java.lang.ClassNotFoundException: org.apache.commons.compress.archivers.zip.ZipFile -->
					<!-- <exclusion>
						<groupId>org.apache.commons</groupId>
						<artifactId>commons-compress</artifactId>
						</exclusion> -->
				</exclusions>
			</dependency>

			<!-- poi-ooxml-schemas是ooxml-schemas的精简版 -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>ooxml-schemas</artifactId>
				<version>${version.ooxml-schemas}</version>
			</dependency>

			<!-- *********************json******************************* -->

			<!--******** logback ******** -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${version.logback}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${version.logback}</version>
			</dependency>

			<!--jul-to-slf4j 桥接 用来输出 Java Logging Framework (JUL) java.util.logging.* -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- jcl-over-slf4j 桥接，用来输出 第三方Jakarta Commons Logging (JCL) -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- log4j-over-slf4j桥接 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- jstl -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${version.jstl}</version>
			</dependency>

			<!--********************************provided******************************** -->
			<!-- servlet-api -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${version.servlet-api}</version>
				<scope>provided</scope>
			</dependency>

			<!-- jsp-api -->
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>javax.servlet.jsp-api</artifactId>
				<version>${version.jsp-api}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>javax.el-api</artifactId>
				<version>${version.el-api}</version>
				<scope>provided</scope>
			</dependency>

			<!-- junit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>

			<!-- hamcrest-library -->
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>${version.hamcrest-library}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<!--********************************build****************************************** -->
	<build>
		<plugins>

			<!-- maven-project-info-reports-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${v.maven-project-info-reports-plugin}</version>
			</plugin>

			<!-- versions-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${v.versions-maven-plugin}</version>
			</plugin>

			<!-- maven-scm-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>${v.maven-scm-plugin}</version>
				<configuration>
					<connectionType>developerConnection</connectionType>
				</configuration>
			</plugin>

			<!-- https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-maven/ -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${v.sonar-maven-plugin}</version>
			</plugin>

			<!-- native2ascii-maven-plugin 国际化插件 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
				<version>${v.native2ascii-maven-plugin}</version>

				<executions>
					<execution>
						<id>native2ascii-resources</id>
						<goals>
							<goal>resources</goal>
						</goals>
						<phase>process-resources</phase> <!-- default -->
						<configuration>
							<srcDir>src/main/resources</srcDir> <!-- default -->
							<targetDir>${project.build.outputDirectory}</targetDir>

							<encoding>${native2ascii-maven-plugin.encoding}</encoding>
							<includes>
								<include>${native2ascii-maven-plugin.pattern}</include>
							</includes>
						</configuration>
					</execution>

					<execution>
						<id>native2ascii-testResources</id>
						<goals>
							<goal>testResources</goal>
						</goals>
						<phase>process-test-resources</phase> <!-- default -->
						<configuration>
							<srcDir>src/test/resources</srcDir> <!-- default -->
							<targetDir>${project.build.testOutputDirectory}</targetDir>

							<encoding>${native2ascii-maven-plugin.encoding}</encoding>
							<includes>
								<include>${native2ascii-maven-plugin.pattern}</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- maven-resources-plugin插件 -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${v.maven-resources-plugin}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>

					<!-- Copy any empty directories included in the Resources. -->
					<includeEmptyDirs>true</includeEmptyDirs>

					<!-- Additional file extensions to not apply filtering (already defined are : jpg, jpeg, gif, bmp, png) -->
					<nonFilteredFileExtensions>
						<!-- see https://maven.apache.org/plugins/maven-resources-plugin/examples/binaries-filtering.html -->
						<nonFilteredFileExtension>xls</nonFilteredFileExtension>
						<nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
						<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
						<nonFilteredFileExtension>swf</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<detail>true</detail>
						</configuration>
					</execution>
					<execution>
						<id>default-testResources</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-compiler-plugin -->
			<plugin>
				<!-- true or false，是否此插件配置将会应用于poms，那些继承于此的项目 -->
				<inherited>true</inherited>

				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${v.maven-compiler-plugin}</version>
				<configuration>
					<!-- 指定高版本的源码和编译后的字节码文件 -->
					<source>${maven-compiler-plugin.source}</source>
					<target>${maven-compiler-plugin.target}</target>
					<encoding>${maven-compiler-plugin.encoding}</encoding>
					<detail>true</detail>
				</configuration>
			</plugin>

			<!-- maven-javadoc-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<outputDirectory>${maven-javadoc-plugin.outputDirectory}</outputDirectory>

					<stylesheet>${maven-javadoc-plugin.stylesheet}</stylesheet>
					<stylesheetfile>${maven-javadoc-plugin.stylesheetfile}</stylesheetfile>

					<docfilessubdirs>true</docfilessubdirs>

					<javadocDirectory>${maven-javadoc-plugin.javadocDirectory}</javadocDirectory>
					<javadocVersion>${maven-javadoc-plugin.javadocVersion}</javadocVersion>

					<!-- Specifies the title to be placed in the HTML title tag.  -->
					<windowtitle>${project.name} ${project.version} API create by feilong</windowtitle>

					<!-- Specifies whether or not the author text is included in the generated Javadocs.  -->
					<author>true</author>
					<!-- Includes the version text in the generated docs.  -->
					<version>true</version>

					<failOnError>false</failOnError>

					<locale>${maven-javadoc-plugin.locale}</locale>

					<charset>${maven-javadoc-plugin.charset}</charset>
					<docencoding>${maven-javadoc-plugin.docencoding}</docencoding>
					<encoding>${maven-javadoc-plugin.encoding}</encoding>

					<header>${project.name} ${project.version} API</header>
					<footer>${project.name} ${project.version} API</footer>

					<bottom>
						<![CDATA[Copyright &copy; {inceptionYear}-{currentYear} by feilong]]>
					</bottom>

				</configuration>
			</plugin>

			<!-- maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${v.maven-jar-plugin}</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-source-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${v.maven-source-plugin}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-surefire-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${v.maven-surefire-plugin}</version>
				<configuration>
					<!-- 跳过测试 -->
					<skip>${maven-surefire-plugin.skip}</skip>

					<includes>
						<include>${maven-surefire-plugin.include}</include>
					</includes>

					<!-- Option to print summary of test suites or just print the test cases that have errors. Default value is: true. -->
					<printSummary>true</printSummary>
				</configuration>
			</plugin>

			<!-- maven-clean-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${v.maven-clean-plugin}</version>
				<executions>
					<execution>
						<id>default-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-deploy-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${v.maven-deploy-plugin}</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-install-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-install-plugin</artifactId>
				<version>${v.maven-install-plugin}</version>
				<executions>
					<execution>
						<id>default-install</id>
						<phase>install</phase>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-release-plugin -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>

			<!-- maven-dependency-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>

			<!-- maven-site-plugin -->
			<!-- http://maven.apache.org/plugins/maven-site-plugin/ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${v.maven-site-plugin}</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.9.1</version>
					</dependency>
				</dependencies>
				<configuration>
					<locales>en</locales> <!-- zh_CN -->
					<generateSitemap>true</generateSitemap>
					<outputDirectory>${maven-site-plugin.outputDirectory}</outputDirectory>
				</configuration>
			</plugin>

			<!-- jacoco-maven-plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${v.jacoco-maven-plugin}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>target/jacoco.exec</dataFile>
							<outputDirectory>target/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
						<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
					</systemPropertyVariables>
				</configuration>
			</plugin>

		</plugins>

		<!-- pluginManagement -->
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${v.maven-assembly-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${v.maven-war-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${v.maven-dependency-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>${v.maven-release-plugin}</version>
				</plugin>

				<!-- maven-javadoc-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${v.maven-javadoc-plugin}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${v.maven-plugin-plugin}</version>
					<configuration>
						<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
						<helpPackageName>org.apache.maven.plugins.help</helpPackageName>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<!-- *******************reporting***************************** -->
	<reporting>
		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${v.versions-maven-plugin}</version>

				<reportSets>
					<reportSet>
						<reports>
							<!-- versions:dependency-updates-report -->
							<report>dependency-updates-report</report>

							<!-- produces a report of those plugins which have newer versions available. -->
							<report>plugin-updates-report</report>

							<!-- produces a report of those properties which are used to control artifact versions and which properies have newer versions available. -->
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>

			</plugin>

			<!-- 生成java代码交叉引用和源代码的html格式 -->
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-jxr-plugin</artifactId> -->
			<!-- <version>${v.maven-jxr-plugin}</version> -->
			<!-- <configuration> -->
			<!-- <aggregate>range</aggregate> -->
			<!-- </configuration> -->
			<!-- </plugin> -->

			<!-- 代码格式检查 -->
			<!-- 乱七八糟的 一行多长都控制 Line is longer than 80 characters (found 99). -->
			<!-- maven-checkstyle-plugin -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${v.maven-dependency-plugin}</version>
			</plugin>

			<!--源码分析 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${v.maven-pmd-plugin}</version>
			</plugin>

			<!-- taglist 检查报告 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>${v.taglist-maven-plugin}</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>XXX</displayName>
								<tags>
									<tag>
										<matchString>XXX</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>TODO</displayName>
								<tags>
									<tag>
										<matchString>TODO</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>FIXME</displayName>
								<tags>
									<tag>
										<matchString>FIXME</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>@deprecated</displayName>
								<tags>
									<tag>
										<matchString>@deprecated</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>${v.maven-changes-plugin}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- [ERROR] 'git' 不是内部或外部命令，也不是可运行的程序 或批处理文件。 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>${v.maven-changelog-plugin}</version>
				<configuration>
					<!-- -->
					<skip>true</skip>
					<type>range</type>
					<outputEncoding>${project.build.sourceEncoding}</outputEncoding>
					<range>30</range>
					<headingDateFormat>MM-dd</headingDateFormat>
					<dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<!-- 指定这个项目的组织机构信息 -->
	<organization>
		<name>feiLong</name>
		<url>https://github.com/ifeilong</url>
	</organization>

	<!-- 项目提交者信息 -->
	<developers>
		<developer>
			<id>feilong</id>
			<name>金鑫</name>
			<url>https://github.com/venusdrogon</url>
			<organization>feilong</organization>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>8</timezone>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<!-- 项目的贡献者,但不属于开发小组 -->
	<contributors>
		<contributor>
			<name>benjamin.liu</name>
			<url>https://github.com/benjaliu</url>
		</contributor>

		<contributor>
			<name>yi.huang</name>
			<url>https://github.com/ananbeike</url>
		</contributor>

		<contributor>
			<name>minglei.feng</name>
			<url>https://github.com/shade41-code</url>
		</contributor>

		<contributor>
			<name>ijiangtao</name>
			<url>https://github.com/ijiangtao</url>
		</contributor>
	</contributors>

	<!-- 软件配置管理SCM (Software Configuration Management), 如cvs ,svn ,git -->
	<!-- The scm url must start with 'scm:' -->
	<scm>
		<url>https://github.com/ifeilong/feilong</url>
		<connection>scm:git:https://github.com/ifeilong/feilong</connection>
		<developerConnection>scm:git:git@github.com:ifeilong/feilong.git</developerConnection>
	</scm>

	<!-- 用于管理此项目的发布跟踪（bug跟踪） -->
	<issueManagement>
		<system>github</system>
		<url>https://github.com/ifeilong/feilong/issues</url>
	</issueManagement>

</project>